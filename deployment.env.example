# 部署环境配置示例 - SCP部署方式
# 复制此文件为 deployment.env 并填入实际值

# 服务器配置
SERVER_HOST=your-server-ip-or-domain
SERVER_USER=deploy
SERVER_PORT=22
DEPLOY_PATH=/var/www/admin-system

# 应用配置
APP_URL=https://your-admin-system.com
NODE_ENV=production

# SSH配置（本地部署脚本使用）
SSH_KEY="-----BEGIN OPENSSH PRIVATE KEY-----
your-private-key-content-here
-----END OPENSSH PRIVATE KEY-----"
KNOWN_HOSTS="your-server-host-keys-here"

# GitHub Actions Secrets 配置说明
# 在 GitHub 仓库的 Settings > Secrets and variables > Actions 中添加以下密钥：

# SERVER_HOST: 服务器IP或域名
# SERVER_USER: 服务器用户名
# SERVER_SSH_KEY: 服务器SSH私钥
# SERVER_PORT: SSH端口（可选，默认22）
# KNOWN_HOSTS: 服务器SSH主机密钥（推荐，用于安全连接）
# APP_URL: 应用访问地址（用于健康检查）
# GITHUB_TOKEN: GitHub访问令牌（用于下载构建产物）

# SCP部署说明
# 现在使用SCP部署方式，具有以下优势：
# - 简化了SSH会话复杂性
# - 更好的错误处理和日志
# - 减少认证问题
# - 支持断点续传（部分）

# 测试SCP部署的方法：
# 1. 测试SSH连接: ./scripts/test-ssh-connection.sh
# 2. 测试SCP部署: ./scripts/test-scp-deployment.sh
# 3. 执行完整部署: ./scripts/deploy.sh production admin-system

# 可选配置
# NPM_REGISTRY_URL: 私有npm仓库地址
# NPM_TOKEN: npm发布令牌
# SLACK_WEBHOOK_URL: Slack通知地址